!(function () { const n = document.querySelector('.svgContainer'); const e = [...n.querySelectorAll('img[src$=".svg"]')]; const i = [].concat(...e.map(t => [...t.classList])); function o (t) { return Math.random() * t } function a (t, n) { let e = t + Math.random() * (n + 1 - t); return Math.floor(e) } function u (t) { return function (n) { return 1 - t(1 - n) } } function l (t) { return function (n) { return n < 0.5 ? t(2 * n) / 2 : (2 - t(2 * (1 - n))) / 2 } } function c (t) { return t } function d (t) { let n = performance.now(); requestAnimationFrame(function e (r) { let i = (r - n) / t.duration; let o = t.timing(i); t.draw(o), i < 1 && requestAnimationFrame(e) }) }let s = []; function f (n, e = { w: w, h: h, t: t, r: r }, i = { W: W, H: H, T: T, R: R }, o = 'width', a) { let u = (i += 2 * e * a) >= e ? e : i; n.style[o] = u + 'px' } function m (t, n, e) { t.style.opacity = 1 - n * e } function g () { let t = a(0, s.length - 1); let n = s[t].i; d({ duration: 8e3, timing: l(c), draw: t => m(n, 0.45, t) }), d({ duration: 2e3, timing: l(c), draw: t => (function (t, n) { let e = a(-16 * n, 16 * n); let r = a(-16 * n, 16 * n); t.style.transform = `translate( ${e}px, ${r}px)` })(n, t) }) } function p () { let t = a(0, s.length - 1); let n = s[t].i; d({ duration: 5e3, timing: l(c), draw: t => m(n, 0.45, t) }); let e = 1; let r = 1; let i = 16; let o = 16; let u = i / o; !(function t () { if (e < o) { n.style.transform = 'rotate(0deg)'; let o = (i -= u) * r; n.style.transform = 'rotate(' + o + 'deg)', e += 1, r *= -1, requestAnimationFrame(t) } else n.style.transform = 'rotate(0deg)' }()) }document.addEventListener('DOMContentLoaded', function () { i.forEach(t => { s.push(function (t) { const e = n.querySelector(`.${t}`); const r = window.getComputedStyle(e); let i = parseFloat(r.width); let a = parseFloat(r.height); let u = parseFloat(r.top); let l = parseFloat(r.right); return { i: e, w: i, h: a, t: u, r: l, W: 0, H: 0, T: o(u), R: o(l) } }(t)) }), d({ duration: 8e3, timing: u(c), draw: t => { let n = a(0, s.length - 1); let e = s[n]; f(e.i, e.w, e.W, 'width', t) } }), d({ duration: 8e3, timing: u(c), draw: t => { let n = a(0, s.length - 1); let e = s[n]; f(e.i, e.h, e.H, 'height', t) } }), d({ duration: 8e3, timing: u(c), draw: t => { let n = a(0, s.length - 1); let e = s[n]; f(e.i, e.t, e.T, 'top', t) } }), d({ duration: 8e3, timing: u(c), draw: t => { let n = a(0, s.length - 1); let e = s[n]; f(e.i, e.r, e.R, 'right', t) } }), setInterval(g, 5e3), setInterval(p, 7e3) }, !0) }())
